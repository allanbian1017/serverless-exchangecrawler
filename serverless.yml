service: ExchangeCrawler

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: us-east-1
  memorySize: 256
  tracing: true
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: "*"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: "arn:aws:sns:us-east-1:*:*"
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

  environment:
    CURRENCY_CHANGED_SNS_ARN:
      Fn::Join:
        - ":"
        - - arn
          - aws
          - sns
          - Ref: AWS::Region
          - Ref: AWS::AccountId
          - currencychanged

package:
  individually: true

plugins:
  - serverless-plugin-tracing
  - serverless-plugin-browserifier

resources:
  Resources:
    currencyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: currency
        AttributeDefinitions:
          - AttributeName: bank
            AttributeType: S
        KeySchema:
          - AttributeName: bank
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    currencyStorage:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: currencybucket

functions:
  Crawler:
    handler: src/crawler.main
    events:
      - schedule:
          rate: rate(1 hour)
  FetchHistory:
    handler: src/fetchhistory.main
    events:
      - http:
          path: history/{date}
          method: get
          cors: true
  LinePub:
    handler: src/linepub.main
    events:
      - sns: currencychanged
    environment:
      LINE_ACCESSTOKEN: ${ssm:/exchangecrawler/LINE_ACCESSTOKEN}
      LINE_SECRET: ${ssm:/exchangecrawler/LINE_SECRET}
  Bot:
    handler: src/bot.main
    events:
      - http:
          path: bot/
          method: post
